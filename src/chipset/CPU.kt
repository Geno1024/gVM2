package com.geno1024.gvm.chipset

import com.geno1024.gvm.devices.Motherboard

class CPU constructor(val DEBUG: Boolean = false)
{
    lateinit var motherboard: Motherboard
    val memory by lazy { motherboard.memory }

    var XA: Long = 0x0000_0000_0000_0000
    var XB: Long = 0x0000_0000_0000_0000
    var XC: Long = 0x0000_0000_0000_0000
    var XD: Long = 0x0000_0000_0000_0000
    var XE: Long = 0x0000_0000_0000_0000
    var XF: Long = 0x0000_0000_0000_0000
    var XG: Long = 0x0000_0000_0000_0000
    var XH: Long = 0x0000_0000_0000_0000

    var CS: Long = 0x0000_0000_0000_0000
    var IP: Long = 0x0000_0000_0000_0000

    /*
                        /------------------------------------
                        |/-----------------------------------
                        ||/----------------------------------
                        |||/---------------------------------
                        ||||/--------------------------------
                        |||||/-------------------------------
                        ||||||/------------------------------
                        |||||||/-----------------------------
                        |||||||| /---------------------------
                        |||||||| |/--------------------------
                        |||||||| ||/-------------------------
                        |||||||| |||/------------------------
                        |||||||| ||||/-----------------------
                        |||||||| |||||/----------------------
                        |||||||| ||||||/---------------------
                        |||||||| |||||||/--------------------
                        |||||||| ||||||||  /-----------------
                        |||||||| ||||||||  |/----------------
                        |||||||| ||||||||  ||/---------------
                        |||||||| ||||||||  |||/--------------
                        |||||||| ||||||||  ||||/------------- 
                        |||||||| ||||||||  |||||/------------ 
                        |||||||| ||||||||  ||||||/-----------
                        |||||||| ||||||||  |||||||/----------
                        |||||||| ||||||||  |||||||| /--------
                        |||||||| ||||||||  |||||||| |/-------
                        |||||||| ||||||||  |||||||| ||/------
                        |||||||| ||||||||  |||||||| |||/-----
                        |||||||| ||||||||  |||||||| ||||/----
                        |||||||| ||||||||  |||||||| |||||/---
                        |||||||| ||||||||  |||||||| ||||||/--
                        |||||||| ||||||||  |||||||| |||||||/-
                        |||||||| ||||||||  |||||||| ||||||||  */
    var FLAGS: Long = 0b00000000_00000000__00000000_00000000__00000000_00000000__00000000_00000000
    /*                                                        |||||||| ||||||||  |||||||| ||||||||
                                                             -/||||||| ||||||||  |||||||| ||||||||
                                                             --/|||||| ||||||||  |||||||| ||||||||
                                                             ---/||||| ||||||||  |||||||| ||||||||
                                                             ----/|||| ||||||||  |||||||| ||||||||
                                                             -----/||| ||||||||  |||||||| ||||||||
                                                             ------/|| ||||||||  |||||||| ||||||||
                                                             -------/| ||||||||  |||||||| ||||||||
                                                             --------/ ||||||||  |||||||| ||||||||
                                                             ----------/|||||||  |||||||| ||||||||
                                                             -----------/||||||  |||||||| ||||||||
                                                             ------------/|||||  |||||||| ||||||||
                                                             -------------/||||  |||||||| ||||||||
                                                             --------------/|||  |||||||| ||||||||
                                                             ---------------/||  |||||||| ||||||||
                                                             ----------------/|  |||||||| ||||||||
                                                             -----------------/  |||||||| ||||||||
                                                             --------------------/||||||| ||||||||
                                                             ---------------------/|||||| ||||||||
                                                             ----------------------/||||| ||||||||
                                                             -----------------------/|||| ||||||||
                                                             ------------------------/||| ||||||||
                                                             -------------------------/|| ||||||||
                                                             --------------------------/| ||||||||
                                                             ---------------------------/ ||||||||
                                                             -----------------------------/|||||||
                                                             ------------------------------/||||||
                                                             -------------------------------/|||||
                                                             --------------------------------/||||
                                                             ---------------------------------/|||
    CF: Carry Flag                                           ----------------------------------/||
    ZF: Zero Flag                                            -----------------------------------/|
    PF: Parity Flag                                          ------------------------------------/
                                                             */

    val CF = 1L shl 2
    val ZF = 1L shl 1
    val PF = 1L shl 0

    fun run(ip: Long = IP)
    {
        IP = ip
        while (true)
        {
            val left = memory.read1(IP).toInt() and 0xff
            val right = memory.read1(IP + 1).toInt() and 0xff
            if (DEBUG) println("${IP.toString(16).padStart(16, '0')}: ${left.toString(16).padStart(2, '0')}${right.toString(16).padStart(2, '0')}")
            // left nibble
            arrayOf(l00)[left].invoke(right)
        }

    }

    val l00 =
    {
        i: Int ->
        arrayOf(
            { IP += 1 },
            { System.exit(-2) }
        )[i].invoke()
    }

    fun l01()
    {

    }



    fun err(): Nothing = throw Exception("Not implemented.")
}